{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\react\\\\contact\\\\React_Tutorial_Contact_Manager_App\\\\src\\\\components\\\\UserDashBoard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { uuid } from \"uuidv4\";\nimport \"./App.css\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport Weather from \"./Weather\";\nconst [contacts, setContacts] = useState([]);\nconst [places, setPlace] = useState([]);\n\nconst addContactHandler = contact => {\n  console.log(contact);\n  setContacts([...contacts, {\n    id: uuid(),\n    ...contact\n  }]);\n};\n\nconst addPlaceHandler = place => {\n  console.log(place);\n  setPlace([...place]);\n};\n\nconst removeContactHandler = id => {\n  const newContactList = contacts.filter(contact => {\n    return contact.id !== id;\n  });\n  setContacts(newContactList);\n};\n\nuseEffect(() => {\n  const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n  if (retriveContacts) setContacts(retriveContacts);\n}, []);\nuseEffect(() => {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n}, [contacts]);\n\nclass UserDashBoard extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui main\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\n;\nexport default UserDashBoard;","map":{"version":3,"sources":["F:/react/contact/React_Tutorial_Contact_Manager_App/src/components/UserDashBoard.js"],"names":["React","useState","useEffect","uuid","AddContact","ContactList","Weather","contacts","setContacts","places","setPlace","addContactHandler","contact","console","log","id","addPlaceHandler","place","removeContactHandler","newContactList","filter","retriveContacts","JSON","parse","localStorage","getItem","LOCAL_STORAGE_KEY","setItem","stringify","UserDashBoard","Component","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAM,CAACQ,MAAD,EAASC,QAAT,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;;AAEA,MAAMU,iBAAiB,GAAIC,OAAD,IAAa;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAJ,EAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc;AAAEQ,IAAAA,EAAE,EAAEZ,IAAI,EAAV;AAAc,OAAGS;AAAjB,GAAd,CAAD,CAAX;AACD,CAHH;;AAKE,MAAMI,eAAe,GAAIC,KAAD,IAAW;AACjCJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAP,EAAAA,QAAQ,CAAC,CAAC,GAAGO,KAAJ,CAAD,CAAR;AACD,CAHD;;AAMA,MAAMC,oBAAoB,GAAIH,EAAD,IAAQ;AACnC,QAAMI,cAAc,GAAGZ,QAAQ,CAACa,MAAT,CAAiBR,OAAD,IAAa;AAClD,WAAOA,OAAO,CAACG,EAAR,KAAeA,EAAtB;AACD,GAFsB,CAAvB;AAIAP,EAAAA,WAAW,CAACW,cAAD,CAAX;AACD,CAND;;AAOEjB,SAAS,CAAC,MAAM;AACZ,QAAMmB,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBC,iBAArB,CAAX,CAAxB;AACA,MAAIL,eAAJ,EAAqBb,WAAW,CAACa,eAAD,CAAX;AACtB,CAHM,EAGJ,EAHI,CAAT;AAKEnB,SAAS,CAAC,MAAM;AACdsB,EAAAA,YAAY,CAACG,OAAb,CAAqBD,iBAArB,EAAwCJ,IAAI,CAACM,SAAL,CAAerB,QAAf,CAAxC;AACD,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;AAIN,MAAMsB,aAAN,SAA4B7B,KAAK,CAAC8B,SAAlC,CAA4C;AAExCC,EAAAA,MAAM,GAAG;AACL,wBACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAID;;AAPqC;;AAQ3C;AACD,eAAeF,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { uuid } from \"uuidv4\";\r\nimport \"./App.css\";\r\nimport AddContact from \"./AddContact\";\r\nimport ContactList from \"./ContactList\";\r\nimport Weather from \"./Weather\";\r\n\r\nconst [contacts, setContacts] = useState([]);\r\nconst [places, setPlace] = useState([]);\r\n\r\nconst addContactHandler = (contact) => {\r\n    console.log(contact);\r\n    setContacts([...contacts, { id: uuid(), ...contact }]);\r\n  };\r\n\r\n  const addPlaceHandler = (place) => {\r\n    console.log(place);\r\n    setPlace([...place]);\r\n  };\r\n\r\n\r\n  const removeContactHandler = (id) => {\r\n    const newContactList = contacts.filter((contact) => {\r\n      return contact.id !== id;\r\n    });\r\n\r\n    setContacts(newContactList);\r\n  };\r\n    useEffect(() => {\r\n        const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n        if (retriveContacts) setContacts(retriveContacts);\r\n      }, []);\r\n    \r\n      useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\r\n      }, [contacts]);\r\n\r\nclass UserDashBoard extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"ui main\">\r\n          </div>\r\n        );\r\n      }\r\n};\r\nexport default UserDashBoard;"]},"metadata":{},"sourceType":"module"}