{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\react\\\\contact\\\\React_Tutorial_Contact_Manager_App\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { uuid } from \"uuidv4\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport Weather from \"./Weather\";\nimport UserDashBoard from \"./UserDashBoard\";\n\nfunction App() {\n  _s();\n\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState([]);\n  const [places, setPlace] = useState([]);\n\n  const addContactHandler = contact => {\n    console.log(contact);\n    setContacts([...contacts, {\n      id: uuid(),\n      ...contact\n    }]);\n  };\n\n  const addPlaceHandler = place => {\n    console.log(place);\n    setPlace([...place]);\n  };\n\n  const removeContactHandler = id => {\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n\n  useEffect(() => {\n    const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (retriveContacts) setContacts(retriveContacts);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserDashBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yZAS5mJEECwG09/TEsSc6FjGAoA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/react/contact/React_Tutorial_Contact_Manager_App/src/components/App.js"],"names":["React","useState","useEffect","uuid","Header","AddContact","ContactList","Weather","UserDashBoard","App","LOCAL_STORAGE_KEY","contacts","setContacts","places","setPlace","addContactHandler","contact","console","log","id","addPlaceHandler","place","removeContactHandler","newContactList","filter","retriveContacts","JSON","parse","localStorage","getItem","setItem","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,iBAAiB,GAAG,UAA1B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,MAAD,EAASC,QAAT,IAAqBb,QAAQ,CAAC,EAAD,CAAnC;;AAGA,QAAMc,iBAAiB,GAAIC,OAAD,IAAa;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAJ,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc;AAAEQ,MAAAA,EAAE,EAAEhB,IAAI,EAAV;AAAc,SAAGa;AAAjB,KAAd,CAAD,CAAX;AACD,GAHD;;AAKA,QAAMI,eAAe,GAAIC,KAAD,IAAW;AACjCJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAP,IAAAA,QAAQ,CAAC,CAAC,GAAGO,KAAJ,CAAD,CAAR;AACD,GAHD;;AAOA,QAAMC,oBAAoB,GAAIH,EAAD,IAAQ;AACnC,UAAMI,cAAc,GAAGZ,QAAQ,CAACa,MAAT,CAAiBR,OAAD,IAAa;AAClD,aAAOA,OAAO,CAACG,EAAR,KAAeA,EAAtB;AACD,KAFsB,CAAvB;AAIAP,IAAAA,WAAW,CAACW,cAAD,CAAX;AACD,GAND;;AAQArB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBnB,iBAArB,CAAX,CAAxB;AACA,QAAIe,eAAJ,EAAqBb,WAAW,CAACa,eAAD,CAAX;AACtB,GAHQ,EAGN,EAHM,CAAT;AAKAvB,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,YAAY,CAACE,OAAb,CAAqBpB,iBAArB,EAAwCgB,IAAI,CAACK,SAAL,CAAepB,QAAf,CAAxC;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAzCQF,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { uuid } from \"uuidv4\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport AddContact from \"./AddContact\";\r\nimport ContactList from \"./ContactList\";\r\nimport Weather from \"./Weather\";\r\nimport UserDashBoard from \"./UserDashBoard\";\r\n\r\nfunction App() {\r\n  const LOCAL_STORAGE_KEY = \"contacts\";\r\n  const [contacts, setContacts] = useState([]);\r\n  const [places, setPlace] = useState([]);\r\n\r\n\r\n  const addContactHandler = (contact) => {\r\n    console.log(contact);\r\n    setContacts([...contacts, { id: uuid(), ...contact }]);\r\n  };\r\n\r\n  const addPlaceHandler = (place) => {\r\n    console.log(place);\r\n    setPlace([...place]);\r\n  };\r\n\r\n\r\n\r\n  const removeContactHandler = (id) => {\r\n    const newContactList = contacts.filter((contact) => {\r\n      return contact.id !== id;\r\n    });\r\n\r\n    setContacts(newContactList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n    if (retriveContacts) setContacts(retriveContacts);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  return (\r\n    <div className=\"ui container\">\r\n      <Header />\r\n      <UserDashBoard />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}