{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\react\\\\contact\\\\React_Tutorial_Contact_Manager_App\\\\src\\\\components\\\\UserDashBoard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { uuid } from \"uuidv4\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport Weather from \"./Weather\";\nconst [contacts, setContacts] = useState([]);\nconst [places, setPlace] = useState([]);\n\nconst addContactHandler = contact => {\n  console.log(contact);\n  setContacts([...contacts, {\n    id: uuid(),\n    ...contact\n  }]);\n};\n\nconst addPlaceHandler = place => {\n  console.log(place);\n  setPlace([...place]);\n};\n\nconst removeContactHandler = id => {\n  const newContactList = contacts.filter(contact => {\n    return contact.id !== id;\n  });\n  setContacts(newContactList);\n};\n\nuseEffect(() => {\n  const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n  if (retriveContacts) setContacts(retriveContacts);\n}, []);\nuseEffect(() => {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n}, [contacts]);\n\nconst UserDashBoard = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui fixed menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui container center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contact Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddContact, {\n      addContactHandler: addContactHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: contacts,\n      getContactId: removeContactHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Weather, {\n      addPlaceHandler: addPlaceHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_c = UserDashBoard;\nexport default UserDashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDashBoard\");","map":{"version":3,"sources":["F:/react/contact/React_Tutorial_Contact_Manager_App/src/components/UserDashBoard.js"],"names":["React","useState","useEffect","uuid","Header","AddContact","ContactList","Weather","contacts","setContacts","places","setPlace","addContactHandler","contact","console","log","id","addPlaceHandler","place","removeContactHandler","newContactList","filter","retriveContacts","JSON","parse","localStorage","getItem","LOCAL_STORAGE_KEY","setItem","stringify","UserDashBoard"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAGA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACE,MAAM,CAACS,MAAD,EAASC,QAAT,IAAqBV,QAAQ,CAAC,EAAD,CAAnC;;AAGA,MAAMW,iBAAiB,GAAIC,OAAD,IAAa;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAJ,EAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc;AAAEQ,IAAAA,EAAE,EAAEb,IAAI,EAAV;AAAc,OAAGU;AAAjB,GAAd,CAAD,CAAX;AACD,CAHD;;AAKA,MAAMI,eAAe,GAAIC,KAAD,IAAW;AACjCJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAP,EAAAA,QAAQ,CAAC,CAAC,GAAGO,KAAJ,CAAD,CAAR;AACD,CAHD;;AAOA,MAAMC,oBAAoB,GAAIH,EAAD,IAAQ;AACnC,QAAMI,cAAc,GAAGZ,QAAQ,CAACa,MAAT,CAAiBR,OAAD,IAAa;AAClD,WAAOA,OAAO,CAACG,EAAR,KAAeA,EAAtB;AACD,GAFsB,CAAvB;AAIAP,EAAAA,WAAW,CAACW,cAAD,CAAX;AACD,CAND;;AAQAlB,SAAS,CAAC,MAAM;AACd,QAAMoB,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBC,iBAArB,CAAX,CAAxB;AACA,MAAIL,eAAJ,EAAqBb,WAAW,CAACa,eAAD,CAAX;AACtB,CAHQ,EAGN,EAHM,CAAT;AAKApB,SAAS,CAAC,MAAM;AACduB,EAAAA,YAAY,CAACG,OAAb,CAAqBD,iBAArB,EAAwCJ,IAAI,CAACM,SAAL,CAAerB,QAAf,CAAxC;AACD,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;AAKF,MAAMsB,aAAa,GAAG,MAAM;AAC1B,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAY,MAAA,iBAAiB,EAAElB;AAA/B;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEJ,QAAvB;AAAiC,MAAA,YAAY,EAAEW;AAA/C;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,OAAD;AAAS,MAAA,eAAe,EAAEF;AAA1B;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAXD;;KAAMa,a;AAaN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { uuid } from \"uuidv4\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport AddContact from \"./AddContact\";\r\nimport ContactList from \"./ContactList\";\r\nimport Weather from \"./Weather\";\r\n\r\n\r\nconst [contacts, setContacts] = useState([]);\r\n  const [places, setPlace] = useState([]);\r\n\r\n\r\n  const addContactHandler = (contact) => {\r\n    console.log(contact);\r\n    setContacts([...contacts, { id: uuid(), ...contact }]);\r\n  };\r\n\r\n  const addPlaceHandler = (place) => {\r\n    console.log(place);\r\n    setPlace([...place]);\r\n  };\r\n\r\n\r\n\r\n  const removeContactHandler = (id) => {\r\n    const newContactList = contacts.filter((contact) => {\r\n      return contact.id !== id;\r\n    });\r\n\r\n    setContacts(newContactList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n    if (retriveContacts) setContacts(retriveContacts);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n\r\nconst UserDashBoard = () => {\r\n  return (\r\n    <div className=\"ui fixed menu\">\r\n      <div className=\"ui container center\">\r\n        <h2>Contact Manager</h2>\r\n      </div>\r\n      <AddContact addContactHandler={addContactHandler} />\r\n      <ContactList contacts={contacts} getContactId={removeContactHandler} />\r\n      <Weather addPlaceHandler={addPlaceHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashBoard;"]},"metadata":{},"sourceType":"module"}